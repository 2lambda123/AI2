parameters:
  deployment_name: ''
  template: ''
  azureSubscription: ''
  azure_subscription: ''
  azureresourcegroup: ''
  workspacename: ''
  azureregion: ''
  aksimagename: ''
  environment: 'tridant-ai'
  doCleanup: True
  alias: '-'
  project: '-'
  expires : "2019-08-01"
  agent: 'AI-GPU'
  ENVIRONMENT_PREFIX: "ml-rts-"
  deploymentguidtag: "ABC123"
  aks_name: "mlaks"
  location: "" #Root Dir of Project
  python_path: "" #Root Dir of Python Env
  python_secret_root: "./"


steps:
# - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
#   submodules: recursive  # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules

- template: cleanuptask.yml
  parameters:
    azureSubscription: ${{parameters.azureSubscription}}
    conda: deployment_aml
    azureresourcegroup: ${{parameters.azureresourcegroup}}
    doCleanup: True

- template: createResourceGroupTemplate.yml
  parameters:
    azureSubscription: ${{parameters.azureSubscription}}
    azureresourcegroup: ${{parameters.azureresourcegroup}}
    location: ${{parameters.azureregion}}
    alias : ${{parameters.alias}}
    project : ${{parameters.project}}
    expires : ${{parameters.expires}}

- template: ${{parameters.template}}
  parameters:
    azureSubscription: ${{parameters.azureSubscription}}
    azure_subscription: ${{parameters.azure_subscription}}
    azureresourcegroup: ${{parameters.azureresourcegroup}}
    workspacename: ${{parameters.workspacename}}
    azureregion: ${{parameters.azureregion}}
    aksimagename: ${{parameters.aksimagename}}
    doCleanup: ${{parameters.doCleanup}}
    aks_name: ${{parameters.aks_name}}
    location: ${{parameters.location}}
    python_path: ${{parameters.python_path}}

- task: AzureCLI@1
  inputs:
    azureSubscription: ${{parameters.azureSubscription}}
    scriptLocation: inlineScript
    inlineScript: |
      source activate ${{parameters.conda}}
      pip install azure azure-cli azure-keyvault python-dotenv
      python ${{parameters.python_secret_root}}.ci/scripts/set_secret.py -n "${{parameters.ENVIRONMENT_PREFIX}}-key"


- task: AzurePowerShell@4
  inputs:
    azureSubscription: ${{parameters.azureSubscription}}
    ScriptType: 'FilePath'
    ScriptPath: '../scripts/SetResource.ps1'
    ScriptArguments: '-resourceGroupName ''${{parameters.azureresourcegroup}}'' -tagId ''deployment-id'' -deploymentId ''${{parameters.deploymentguidtag}}'''
    azurePowerShellVersion: 'LatestVersion'
  displayName: 'Tag All Resources'
  
